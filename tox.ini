[tox]
# Running plain tox will run the default environment (testenv) with the default
# python3 interpreter of the user.
envlist=py3
[testenv]
deps=coverage
commands =
    # Create HTML coverage report for humans and xml coverage report for external services.
    coverage run --source=pytest_workflow -m pytest -v tests -m 'not functional'
    coverage html
    coverage xml

[testenv:lint]
deps=flake8
     flake8-import-order
     bandit
     mypy
     types-pyyaml
commands =
    flake8 src tests setup.py
    mypy --ignore-missing-imports src/pytest_workflow tests/

# Documentation should build on python version 3
[testenv:docs]
deps=-r requirements-docs.txt
allowlist_externals=bash
                    mkdir
                    rm
commands=
    python --version
    # PLACEHOLDER: create _static folder, since we do not have static files in
    # our project yet
    mkdir -p docs/_static
    # Remove docs/_build so all documentation has to be build again
    # This is necessary when using --keep-going on sphinx-build
    rm -rf docs/_build
    # Test if documentation can be build without errors and warnings
    # -a rebuilds everything. -W turns warnings into errors.
    # --keep-going makes sure we see al the errors that are there in one go.
    sphinx-build -a -W -n --keep-going docs docs/_build
    # Test if version correctly shows up in documentation
    bash -c 'set -eu; grep "$(python setup.py --version)" docs/_build/index.html'

[testenv:snakemake]
deps=snakemake
commands =
    python -m pytest tests/functional/test_functional.py::test_snakemake

[testenv:cromwell]
# Empty deps. Otherwise deps from default testenv are used.
deps=
commands =
    python -m pytest tests/functional/test_functional.py::test_cromwell

[testenv:miniwdl]
deps=miniwdl
commands=
    python -m pytest tests/functional/test_functional.py::test_miniwdl
    
[testenv:nextflow]
# Empty deps. Otherwise deps from default testenv are used.
deps=
commands =
    python -m pytest tests/functional/test_functional.py::test_nextflow
    
[testenv:bash]
# Empty deps. Otherwise deps from default testenv are used.
deps=
commands =
    python -m pytest -k test_bash tests/functional/test_functional.py
